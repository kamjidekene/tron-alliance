"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./modules/projects/constants.ts":
/*!***************************************!*\
  !*** ./modules/projects/constants.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"categories\": function() { return /* binding */ categories; },\n/* harmony export */   \"allProjects\": function() { return /* binding */ allProjects; }\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar categories = {\n    NFT: \"nft\",\n    INFRASTRUCTURE: \"infrastructure\",\n    DEFI: \"defi\",\n    MARKETPLACE: \"marketplace\",\n    BRIDGE: \"bridge\",\n    DEX: \"dex\",\n    HACKATHON: \"hackathon\"\n};\nvar allProjects = [\n    {\n        title: \"Social Swap\",\n        url: \"https://www.socialswap.io/\",\n        description: \"Diffusion is an Automated Market Maker (AMM) protocol and liquidity pool designed for efficient trading between crypto-assets. The trading activity on Diffusion captures fees as revenue for liquidity providers, resulting in a decentralized market and trading experience. \",\n        image: \"/diffusion.png\",\n        categories: [\n            categories.DEX\n        ]\n    },\n    {\n        title: \"Connext\",\n        url: \"https://bridge.connext.network/\",\n        description: \"Connext is an interoperability protocol that empowers developers to build fully expressive cross domain apps (xApps) with a strong focus on security.\",\n        image: \"/connext.png\",\n        categories: [\n            categories.BRIDGE\n        ]\n    },\n    {\n        title: \"JustLend\",\n        url: \"https://app.justlend.org/#/home\",\n        description: \"JustLend is a TRON-powered coin market protocol aimed at establishing fund pools whose interest rates are determined by an algorithm based on the supply and demand of TRON assets..\",\n        image: \"/justlend.jpg\",\n        categories: [\n            categories.DEFI\n        ]\n    },\n    {\n        title: \"JustStables\",\n        url: \"https://juststable.tronscan.org/#/login\",\n        description: \"JustStable is a decentralized finance system of USDJ stablecoin for everyone, anywhere, anytime.\",\n        image: \"/juststables.jpg\",\n        categories: [\n            categories.DEX\n        ]\n    },\n    {\n        title: \"SUN\",\n        url: \"https://sun.io/\",\n        description: \"First integrated platform for stablecoin swap, stake-mining, and self-governance on TRON\",\n        image: \"/Sun.jpg\",\n        categories: [\n            categories.DEX\n        ]\n    },\n    {\n        title: \"SocialSwap\",\n        url: \"https://www.socialswap.io/\",\n        description: \"Socialswap is a decentralized exchange on tron blockchain.\",\n        image: \"/socialswap.jpg\",\n        categories: [\n            categories.DEX\n        ]\n    },\n    {\n        title: \"UniFi\",\n        url: \"https://unifiprotocol.com/\",\n        description: \"Unifi Protocol is a group of non-custodial, interoperable smart contracts linking multiple blockchains together into one large DeFi marketplace..\",\n        image: \"/unifi.jpg\",\n        categories: [\n            categories.DEX\n        ]\n    },\n    {\n        title: \"JustMoney\",\n        url: \"https://about.just.money/\",\n        description: \"An ecosystem for the next generation of decentralized applications to power Web3 and DeFi.\",\n        image: \"/justmoney.jpg\",\n        categories: [\n            categories.DEX\n        ]\n    },\n    {\n        title: \"OneSwap\",\n        url: \"https://www.oneswap.net/\",\n        description: \"A fully decentralized exchange protocol on Smart Contract, with permission-free token listing and automated market making.\",\n        image: \"/oneswap.jpg\",\n        categories: [\n            categories.DEX\n        ]\n    },\n    {\n        title: \"LuminousFinance\",\n        url: \"https://luminous.finance/\",\n        description: \"Lumi is a token based on the Tron blockchain. Lumi was created as a popular and utility token for the Luminous ecosystem.\",\n        image: \"/luminusfinance.jpg\",\n        categories: [\n            categories.DEX\n        ]\n    },\n    {\n        title: \"MetaBid\",\n        url: \"https://devpost.com/software/metabid\",\n        description: \"Metabid is a platform that allows people to auction and sell their second-hand cars or valuables, similar to real life ones. At the same time, people have the opportunity to open a store and sell their products with METABLOK tokens in the metaverse environment.\",\n        image: \"/metabid.png\",\n        categories: [\n            categories.DEFI\n        ]\n    },\n    {\n        title: \"Br\\xfaFinance\",\n        url: \"https://devpost.com/software/bru-finance-ni18vt\",\n        description: \"Br\\xfa Finance creates a bridged ecosystem of DeFi and CeFi through its integrated custodian-based real-world asset tokenization and decentralised lending solution. This helps in channelling the high yield-seeking capital from the developed world to the unbanked and the underbanked in emerging markets through an open, borderless and bankless system of finance secured by RWAs that reduces collection risk.\",\n        image: \"/brufinance.png\",\n        categories: [\n            categories.DEFI\n        ]\n    },\n    {\n        title: \"AlphaFinance\",\n        url: \"https://devpost.com/software/bru-finance-ni18vt\",\n        description: \"Alpha finance is a protocol and service that is a solution to the problems and needs of people in the DEFI world with a system that is secure and transparent, and also protects all consumer privacy.\",\n        image: \"/alphafinance.png\",\n        categories: [\n            categories.DEFI\n        ]\n    },\n    {\n        title: \"Coreburse\",\n        url: \"https://devpost.com/software/coreburse-plf58b\",\n        description: \"Coreburse is inspired by the practical value of Defi, which can perfectly apply blockchain technology to actual products, and people's pursuit of decentralization is becoming increasingly intense. To meet these needs, we created Coreburse.\",\n        image: \"/coreburse.png\",\n        categories: [\n            categories.DEFI\n        ]\n    },\n    {\n        title: \"HikaruFinance\",\n        url: \"https://hikaru.fi\",\n        description: \"Hikaru.fi is an automated portfolio manager that allows you to diversify your holdings smarter than ever.\",\n        image: \"/hikaru.png\",\n        categories: [\n            categories.DEFI\n        ]\n    },\n    {\n        title: \"Kattana\",\n        url: \"https://app.kattana.io/pancakeswap/0xb5D108578Be3750209d1b3A8f45FFee8C5a75146\",\n        description: \"Kattana.io Leading trading environment for DeFi. Entry point for global blockchain users. Kattana - is a trustable cross-chain trading terminal for DEXs and CEXs.\",\n        image: \"/kattana.png\",\n        categories: [\n            categories.DEFI,\n            categories.HACKATHON,\n            categories.DEX\n        ]\n    },\n    {\n        title: \"Calamus Finance\",\n        url: \"https://calamus.finance/\",\n        description: \"Your decentralized crypto streaming platform - Automate real-time salary, startup vesting or any transactions with enhanced security and transparency\",\n        image: \"/calamusfinance.jpg\",\n        categories: [\n            categories.DEFI,\n            categories.HACKATHON\n        ]\n    },\n    {\n        title: \"MistTrack Analytics Platform\",\n        url: \"https://misttrack.io/\",\n        description: \"MistTrack analytics platform combines a number of SaaS systems designed specifically to target crypto money laundering. It's the one-stop destination for all of your investigating needs.\",\n        image: \"/mistrack.png\",\n        categories: [\n            categories.DEFI,\n            categories.HACKATHON\n        ]\n    },\n    {\n        title: \"DAO Cake\",\n        url: \"https://daocake.xyz/\",\n        description: \"Making founder contributions easy. Bringing DAO tech to communities & startups.\",\n        image: \"/daocake.png\",\n        categories: [\n            categories.HACKATHON\n        ]\n    },\n    {\n        title: \"HolaChain, Web3 Secured W2W Communication Infrastructure\",\n        url: \"https://tron.4thtech.io/\",\n        description: \"Send, receive TRON dMails or exchange on-chain messages with no ads, no data mining & no tracking. HolaChain secures your E2EE communication and enables white-label SDKs for Web3 projects.\",\n        image: \"/holachain.png\",\n        categories: [\n            categories.HACKATHON\n        ]\n    },\n    {\n        title: \"[Web3] Adshares ($ADS) in TronDAO Ecosystem!\",\n        url: \"https://adshares.net/\",\n        description: \"Adshares is an advertising Web3 protocol designed to provide blockchain-based ad software to ad tech industry. Metaverse & Game monetization allows community to monetize their virtual assets.\",\n        image: \"/adshares.png\",\n        categories: [\n            categories.NFT,\n            categories.HACKATHON\n        ]\n    },\n    {\n        title: \"NRG & Community DAO - By TronNinjas Team\",\n        url: \"https://tronnrg.com/\",\n        description: \"Tron NRG is a Decentralized P2P energy rental service that allows users to save on Tron transaction fees by renting energy!\",\n        image: \"/nrg.png\",\n        categories: [\n            categories.HACKATHON\n        ]\n    },\n    {\n        title: \"CertiFi\",\n        url: \"https://getcertifi.app/\",\n        description: \"Blockchain based Credential Platform that lets institutions issue credentials and learners store, verify and share their credentials. Transcript Issuing cost for CertiFi ($0.56) << Conventional ($5+).\",\n        image: \"/certifi.png\",\n        categories: [\n            categories.HACKATHON\n        ]\n    },\n    {\n        title: \"Meson\",\n        url: \"https://meson.fi/\",\n        description: \"Meson introduces a next-gen cross-chain user experience on stablecoins - lightning-fast swap with unbelievably low cost among Ethereum, various high-performance public chains, and Layer 2's.\",\n        image: \"/meson.png\",\n        categories: [\n            categories.DEFI,\n            categories.HACKATHON\n        ]\n    },\n    {\n        title: \"Dazzle Protocol\",\n        url: \"https://testnet.dazzleprotocol.com/\",\n        description: \"The easy first step into DeFi\",\n        image: \"/dazzle.jpg\",\n        categories: [\n            categories.DEFI,\n            categories.HACKATHON\n        ]\n    },\n    {\n        title: \"Tron Security Dashcam\",\n        url: \"https://github.com/BubblyOrca/Tron-Security-Dashcam\",\n        description: \"The Tron Security Dashcam is a start-of-the-art collection of risk dashboards that monitors fishy activity that happens on-chain, & also notifies Tron Security experts about what's happening in Web3.\",\n        image: \"/tron-security.png\",\n        categories: [\n            categories.DEFI,\n            categories.HACKATHON\n        ]\n    },\n    {\n        title: \"\",\n        url: \"\",\n        description: \"\",\n        image: \"/.png\",\n        categories: [\n            categories.DEFI,\n            categories.HACKATHON,\n            categories.DEX\n        ]\n    },\n    {\n        title: \"\",\n        url: \"\",\n        description: \"\",\n        image: \"/.png\",\n        categories: [\n            categories.DEFI,\n            categories.HACKATHON,\n            categories.DEX\n        ]\n    },\n    {\n        title: \"\",\n        url: \"\",\n        description: \"\",\n        image: \"/.png\",\n        categories: [\n            categories.DEFI,\n            categories.HACKATHON,\n            categories.DEX\n        ]\n    },\n    {\n        title: \"\",\n        url: \"\",\n        description: \"\",\n        image: \"/.png\",\n        categories: [\n            categories.DEFI,\n            categories.HACKATHON,\n            categories.DEX\n        ]\n    },\n    {\n        title: \"\",\n        url: \"\",\n        description: \"\",\n        image: \"/.png\",\n        categories: [\n            categories.DEFI,\n            categories.HACKATHON,\n            categories.DEX\n        ]\n    }, \n];\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./modules/projects/constants.ts\n");

/***/ })

});